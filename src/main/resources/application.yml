spring:
  application:
    name: "capture"
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8084/auth/realms/capture}
          jwk-set-uri: ${KEYCLOAK_JWK_SET_URI:http://localhost:8084/auth/realms/capture/protocol/openid-connect/certs}
  r2dbc:
    url: ${DATABASE_URL:r2dbc:postgresql://localhost:5433/capture}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:admin}
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true # If there is no history table, create one
    url: ${FLYWAY_DATABASE_URL:jdbc:postgresql://localhost:5433/capture}
    user: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:admin}
  data:
    r2dbc:
      repositories:
        enabled: true
logging:
  level:
    org.flywaydb: DEBUG
    org.springframework.boot.autoconfigure.flyway: DEBUG
server:
  port: ${APP_PORT:8088}

# needed for access token generation
INVITE_SECRET: ${VAR_INVITE_SECRET:admin}